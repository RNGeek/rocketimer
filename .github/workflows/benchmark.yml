name: Benchmark test
on: [push]

jobs:
  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.OS }}-node-

      # playwright を github action 上で動かすのに必要
      - uses: microsoft/playwright-github-action@v1

      - name: yarn install
        # playwright-github-action を使っている時は yarn install をスキップすると、何故かブラウザのバイナリが無いと言われて落ちてしまう
        # if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      # yarn run benchmark:fps のためにサーバを立てておく
      - name: Start server
        run: |
          yarn run build
          yarn run http-server --silent -p 8080 dist &

      # ベンチマークを実行し、github-action-benchmark 向けに結果を /output.txt に書き出しておく
      - name: yarn run benchmark:render-time
        run: yarn run benchmark:render-time

      - name: yarn run benchmark:fps
        run: yarn run benchmark:fps

      # github-action-benchmark を実行
      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          tool: 'benchmarkjs'
          output-file-path: output.txt
          # 以前より 200% ほど悪化していたらアラートを上げる
          alert-threshold: '200%'
          # アラートが上がったらワークフローを失敗させる
          fail-on-alert: true
          # commit が push される度にベンチマーク結果を commit comment でお知らせする
          # NOTE: 普段は ON にするとノイズになるのでパフォーマンスチューニングをしたいときだけ ON にする
          comment-always: true
          # master では GitHub Pages に結果を push する
          auto-push: ${{ github.ref == 'refs/heads/master' }}
          github-token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
